variables:
  CI_IMAGE: rootlogin/nextcloud
  BUILDX_VER: 0.5.1

stages:
  - build
  - push
  - afterwork

services:
  - docker:dind

before_script:
  - '[ "$CI_COMMIT_REF_SLUG" == "master" ] && export CI_DOCKER_TAG="latest" || export CI_DOCKER_TAG="$CI_COMMIT_REF_SLUG"'
  - 'echo "Using CI_DOCKER_TAG: $CI_DOCKER_TAG"'
  - export DOCKER_CLI_EXPERIMENTAL=enabled
  - mkdir -p /root/.docker/cli-plugins
  - wget -qO ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v${BUILDX_VER}/buildx-v${BUILDX_VER}.linux-amd64
  - chmod +x /root/.docker/cli-plugins/docker-buildx
  - docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_TOKEN"
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - docker buildx create --use

build-amd64:
  image: docker:latest
  stage: build
  script:
    - docker buildx build --push
      --platform linux/amd64
      --build-arg "VCS_REF=$CI_COMMIT_SHORT_SHA" 
      --build-arg 'BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`' 
      -t "$CI_IMAGE:$CI_DOCKER_TAG-amd64" .
  retry: 1

build-x86:
  image: docker:latest
  stage: build
  script:
    - docker buildx build --push
      --platform linux/386
      --build-arg "VCS_REF=$CI_COMMIT_SHORT_SHA" 
      --build-arg 'BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`' 
      -t "$CI_IMAGE:$CI_DOCKER_TAG-x86" .
  retry: 1

build-arm64:
  image: docker:latest
  stage: build
  script:
    - docker buildx build --push
      --platform linux/arm64/v8
      --build-arg "VCS_REF=$CI_COMMIT_SHORT_SHA" 
      --build-arg 'BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`' 
      -t "$CI_IMAGE:$CI_DOCKER_TAG-arm64" .
  retry: 1

build-armv7:
  image: docker:latest
  stage: build
  script:
    - docker buildx build --push
      --platform linux/arm/v7
      --build-arg "VCS_REF=$CI_COMMIT_SHORT_SHA" 
      --build-arg 'BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`' 
      -t "$CI_IMAGE:$CI_DOCKER_TAG-armv7" .
  retry: 1

build-ppc64le:
  image: docker:latest
  stage: build
  script:
    - docker buildx build --push
      --platform linux/ppc64le
      --build-arg "VCS_REF=$CI_COMMIT_SHORT_SHA" 
      --build-arg 'BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`' 
      -t "$CI_IMAGE:$CI_DOCKER_TAG-ppc64le" .
  retry: 1

build-s390x:
  image: docker:latest
  stage: build
  script:
    - docker buildx build --push
      --platform linux/s390x
      --build-arg "VCS_REF=$CI_COMMIT_SHORT_SHA" 
      --build-arg 'BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`' 
      -t "$CI_IMAGE:$CI_DOCKER_TAG-s390x" .
  retry: 1

push-docker-hub:
  image: docker:latest
  stage: push
  script:
    - docker pull "$CI_IMAGE:$CI_DOCKER_TAG-amd64"
    - docker pull "$CI_IMAGE:$CI_DOCKER_TAG-x86"
    - docker pull "$CI_IMAGE:$CI_DOCKER_TAG-arm64"
    - docker pull "$CI_IMAGE:$CI_DOCKER_TAG-armv7"
    - docker pull "$CI_IMAGE:$CI_DOCKER_TAG-ppc64le"
    - docker pull "$CI_IMAGE:$CI_DOCKER_TAG-s390x"
    - docker manifest create
      "$CI_IMAGE:$CI_DOCKER_TAG"
      --amend "$CI_IMAGE:$CI_DOCKER_TAG-amd64"
      --amend "$CI_IMAGE:$CI_DOCKER_TAG-x86"
      --amend "$CI_IMAGE:$CI_DOCKER_TAG-arm64"
      --amend "$CI_IMAGE:$CI_DOCKER_TAG-armv7"
      --amend "$CI_IMAGE:$CI_DOCKER_TAG-ppc64le"
      --amend "$CI_IMAGE:$CI_DOCKER_TAG-s390x"
    - docker manifest push "$CI_IMAGE:$CI_DOCKER_TAG"
  retry: 1

push-quay-io:
  image: docker:latest
  stage: push
  script:
    - docker login -u "$QUAYIO_USERNAME" -p "$QUAYIO_TOKEN" quay.io
    # x86
    - docker pull "$CI_IMAGE:$CI_DOCKER_TAG-x86"
    - docker tag "$CI_IMAGE:$CI_DOCKER_TAG-x86" "quay.io/$CI_IMAGE:$CI_DOCKER_TAG-x86"
    - docker push "quay.io/$CI_IMAGE:$CI_DOCKER_TAG-x86"
    # amd64
    - docker pull "$CI_IMAGE:$CI_DOCKER_TAG-amd64"
    - docker tag "$CI_IMAGE:$CI_DOCKER_TAG-amd64" "quay.io/$CI_IMAGE:$CI_DOCKER_TAG-amd64"
    - docker push "quay.io/$CI_IMAGE:$CI_DOCKER_TAG-amd64"
    # arm64
    - docker pull "$CI_IMAGE:$CI_DOCKER_TAG-arm64"
    - docker tag "$CI_IMAGE:$CI_DOCKER_TAG-arm64" "quay.io/$CI_IMAGE:$CI_DOCKER_TAG-arm64"
    - docker push "quay.io/$CI_IMAGE:$CI_DOCKER_TAG-arm64"
    # armv7
    - docker pull "$CI_IMAGE:$CI_DOCKER_TAG-armv7"
    - docker tag "$CI_IMAGE:$CI_DOCKER_TAG-armv7" "quay.io/$CI_IMAGE:$CI_DOCKER_TAG-armv7"
    - docker push "quay.io/$CI_IMAGE:$CI_DOCKER_TAG-armv7"
    # ppc64le
    - docker pull "$CI_IMAGE:$CI_DOCKER_TAG-ppc64le"
    - docker tag "$CI_IMAGE:$CI_DOCKER_TAG-ppc64le" "quay.io/$CI_IMAGE:$CI_DOCKER_TAG-ppc64le"
    - docker push "quay.io/$CI_IMAGE:$CI_DOCKER_TAG-ppc64le"
    # s390x
    - docker pull "$CI_IMAGE:$CI_DOCKER_TAG-s390x"
    - docker tag "$CI_IMAGE:$CI_DOCKER_TAG-s390x" "quay.io/$CI_IMAGE:$CI_DOCKER_TAG-s390x"
    - docker push "quay.io/$CI_IMAGE:$CI_DOCKER_TAG-s390x"
    # Multi-arch manifest
    - docker manifest create
      "quay.io/$CI_IMAGE:$CI_DOCKER_TAG"
      --amend "quay.io/$CI_IMAGE:$CI_DOCKER_TAG-amd64"
      --amend "quay.io/$CI_IMAGE:$CI_DOCKER_TAG-x86"
      --amend "quay.io/$CI_IMAGE:$CI_DOCKER_TAG-arm64"
      --amend "quay.io/$CI_IMAGE:$CI_DOCKER_TAG-armv7"
      --amend "quay.io/$CI_IMAGE:$CI_DOCKER_TAG-ppc64le"
      --amend "quay.io/$CI_IMAGE:$CI_DOCKER_TAG-s390x"
    - docker manifest push "quay.io/$CI_IMAGE:$CI_DOCKER_TAG"
  retry: 1

webhook-microbadger:
  image: curlimages/curl
  stage: afterwork
  script:
    - curl -X POST https://hooks.microbadger.com/images/rootlogin/nextcloud/$MICROBADGER_WEBHOOK

webhook-pushover:
  image: curlimages/curl
  stage: afterwork
  script:
    - curl -s 
      --form-string "token=$PUSHOVER_TOKEN" 
      --form-string "user=$PUSHOVER_USER" 
      --form-string "title=GitLab CI" 
      --form-string "message=Image $CI_IMAGE:$CI_DOCKER_TAG has been published!" 
      --form-string "sound=pushover" 
      --form-string "priority=0" 
      https://api.pushover.net/1/messages.jso